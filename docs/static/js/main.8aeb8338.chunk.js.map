{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+KAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAC,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAlBc,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MACnCR,EAAeQ,S,QCLVG,G,KAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,S,uBCPHK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,+DAEAG,MAAOR,GAFP,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcbY,GAda,4CAAH,sDCGPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAiBxC,OAVAC,qBAAU,WACNjB,EAASC,GACJiB,MAAM,SAAAC,GACHH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDd0BK,CAAcnB,GAAlCU,EAFwB,EAE7BJ,KAAaO,EAFgB,EAEhBA,QAErB,OACI,qCACA,6BAAKb,IAEJa,GAAW,yCAEZ,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAESA,GADAA,EAAIhB,aEbpB2B,EAAe,WAAO,IAAD,EAEOzC,mBAAS,CAAC,SAFjB,mBAEvB0C,EAFuB,KAEV3C,EAFU,KAI9B,OACI,qCACI,8CACA,uBACA,cAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAEQ2C,EAAWb,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,YCXtCsB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,U","file":"static/js/main.8aeb8338.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ({ target: { value } }) => {\r\n        setInputValue( value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); //Prevenir que se refresque la pagina\r\n        \r\n        if( inputValue.trim().length > 2 ) {\r\n            setCategories( c => [inputValue, ...c]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\" \r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport '../index.css';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async ( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=SmvmfuDDF1I4NQL8gUSX472657dEBYi3`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    //Creo un nuevo objeto con los datos que necesito\r\n    const gifs = data.map( img => {\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url //? para preguntar si trae que lo utilice\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n}","import React from 'react'\r\nimport {GifGridItem} from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ( {category} ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n        \r\n        {loading && <p>Cargando</p>}\r\n\r\n        <div className=\"card-grid\">\r\n            {\r\n                images.map( img => (\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }  //Le paso las props mediante desetructuracion\r\n                    />\r\n                    )\r\n                )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs( category )\r\n            .then( imgs => {    \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\n\r\nimport {AddCategory} from './components/AddCategory';\r\nimport {GifGrid} from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories , setCategories] = useState(['Goku']);\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr />\r\n            <AddCategory setCategories={ setCategories } />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid key={category} category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp'\n\nimport './index.css';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}